@startuml
set separator none
title Data Fabric - Containers

top to bottom direction

!include <C4/C4>
!include <C4/C4_Context>
!include <C4/C4_Container>

AddElementTag("Element", $bgColor="#dddddd", $borderColor="#9a9a9a", $fontColor="#000000", $sprite="", $shadowing="")
AddElementTag("Container,Database", $bgColor="#438dd5", $borderColor="#2e6295", $fontColor="#ffffff", $sprite="", $shadowing="")
AddElementTag("Software System,Hycon", $bgColor="#ffd470", $borderColor="#b2944e", $fontColor="#4a4a4a", $sprite="", $shadowing="")
AddElementTag("Container", $bgColor="#438dd5", $borderColor="#2e6295", $fontColor="#ffffff", $sprite="", $shadowing="")
AddElementTag("Container,Web Browser", $bgColor="#438dd5", $borderColor="#2e6295", $fontColor="#ffffff", $sprite="", $shadowing="")

AddRelTag("Relationship", $textColor="#707070", $lineColor="#707070", $lineStyle = "")

AddBoundaryTag("Software System", $bgColor="#ffffff", $borderColor="#0b4884", $fontColor="#0b4884", $shadowing="")

skinparam svgDimensionStyle false
skinparam preserveAspectRatio meet
Person(DataConsumer, "Data Consumer", $descr="A consumer who are needed a data in various context.", $tags="Element", $link="")
Person(ERP, "ERP", $descr="Traditional type of dataset in enterprise grade.", $tags="Element", $link="")
Person(DataLake, "Data Lake", $descr="Unstructured or semi-structured dataset", $tags="Element", $link="")
Person(DataWarehouse, "Data Warehouse", $descr="Structured dataset.", $tags="Element", $link="")
System(DataPipeline, "Data Pipeline", $descr="An autonomous driving dataset generated from scenarios provided by the consortium.", $tags="Software System,Hycon", $link="../../data-pipeline/context/")

System_Boundary("DataFabric_boundary", "Data Fabric", $tags="Software System") {
  AddBoundaryTag("Client-side", $borderColor="#cccccc", $fontColor="#cccccc")
  Boundary(group_1, "Client-side", $tags="Client-side") {
    Container(DataFabric.WebApplication, "Web Application", $techn="", $descr="Serverless nextjs", $tags="Container,Web Browser", $link="")
  }

  AddBoundaryTag("Server-side", $borderColor="#cccccc", $fontColor="#cccccc")
  Boundary(group_2, "Server-side", $tags="Server-side") {
      AddBoundaryTag("Server-side/API Gateway Service", $borderColor="#cccccc", $fontColor="#cccccc")
      Boundary(group_3, "API Gateway Service", $tags="Server-side/API Gateway Service") {
        Container(DataFabric.APIService, "API Service", $techn="", $descr="API Gateway Managed Service", $tags="Container", $link="")
      }

      AddBoundaryTag("Server-side/Knowledge Service", $borderColor="#cccccc", $fontColor="#cccccc")
      Boundary(group_4, "Knowledge Service", $tags="Server-side/Knowledge Service") {
        Container(DataFabric.KnowledgeGraphApp, "Knowledge Graph App", $techn="Container: Serverless Java or Typescript Application", $descr="Provides", $tags="Container", $link="../component/")
        ContainerDb(DataFabric.KnowledgeGraphDatabase, "Knowledge Graph Database", $techn="", $descr="DB: Neo4j or AWS Neptune", $tags="Container,Database", $link="")
      }

      AddBoundaryTag("Server-side/Metadata Service", $borderColor="#cccccc", $fontColor="#cccccc")
      Boundary(group_5, "Metadata Service", $tags="Server-side/Metadata Service") {
        Container(DataFabric.MetadataApp, "Metadata App", $techn="", $descr="Active Metadata", $tags="Container", $link="../component/")
        ContainerDb(DataFabric.MetadataDatabase, "Metadata Database", $techn="", $descr="DB: AWS Aurora Postgrsql", $tags="Container,Database", $link="")
      }

  }

  Container(DataFabric.DataSourceGateway, "Data Source Gateway", $techn="Container: Java Application", $descr="Manage data pipeline between distburited data source and Data Fabric in secure.", $tags="Container", $link="")
}

Rel_D(DataFabric.DataSourceGateway, DataPipeline, "", $techn="", $tags="Relationship", $link="")
Rel_D(DataConsumer, DataFabric.APIService, "", $techn="", $tags="Relationship", $link="")
Rel_D(DataConsumer, DataFabric.WebApplication, "", $techn="", $tags="Relationship", $link="")
Rel_D(DataFabric.KnowledgeGraphApp, DataFabric.KnowledgeGraphDatabase, "build Local Knowledge Graph", $techn="", $tags="Relationship", $link="")
Rel_D(DataFabric.KnowledgeGraphApp, DataFabric.MetadataApp, "", $techn="", $tags="Relationship", $link="")
Rel_D(DataFabric.DataSourceGateway, ERP, "", $techn="", $tags="Relationship", $link="")
Rel_D(DataFabric.DataSourceGateway, DataLake, "", $techn="", $tags="Relationship", $link="")
Rel_D(DataFabric.DataSourceGateway, DataWarehouse, "", $techn="", $tags="Relationship", $link="")
Rel_D(DataFabric.MetadataApp, DataFabric.DataSourceGateway, "", $techn="", $tags="Relationship", $link="")
Rel_D(DataFabric.MetadataApp, DataFabric.MetadataDatabase, "", $techn="", $tags="Relationship", $link="")
Rel_D(DataFabric.APIService, DataFabric.KnowledgeGraphApp, "", $techn="", $tags="Relationship", $link="")
Rel_D(DataFabric.APIService, DataFabric.MetadataApp, "", $techn="", $tags="Relationship", $link="")
Rel_D(DataFabric.WebApplication, DataFabric.APIService, "", $techn="", $tags="Relationship", $link="")

SHOW_LEGEND(true)
@enduml